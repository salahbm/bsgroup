datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  relationMode = "prisma"
}

generator client {
  provider = "prisma-client-js"
}

model Country {
  id          String     @id @default(uuid())

  name        String
  title       String?
  description String @db.Text

  imgUrl      String
  isNew       Boolean

  jobId       String
  jobs        Job[]

  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@index([jobId])
}

model Job {
  id          String     @id @default(uuid())

  name        String
  title       String?
  description String @db.Text
  imgUrl      String

  isNew       Boolean @default(true)
  isTrend     Boolean @default(true)
  isActive    Boolean @default(true)
  isDeadline  Boolean @default(false)

  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  countryId   String
  country     Country @relation(fields: [countryId], references: [id], onDelete: Cascade)

  @@index([countryId])
  @@unique([name, countryId])
}

model User {
  id            String          @id @default(cuid())
  name          String?
  email         String          @unique
  emailVerified DateTime?
  password      String?
  accounts      Account[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Account {
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@id([provider, providerAccountId])
  @@index([userId])
}
